{"version":3,"sources":["hoc/withAuthRedirect.tsx","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/AddMessageForm.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.ts"],"names":["mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","connect","props","restProps","to","module","exports","DialogItem","path","id","className","classes","dialog","active","name","Message","messages","message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","createField","requiredField","Textarea","Dialogs","dialogsPage","addMessage","dialogsElements","dialogs","map","d","key","messagesElements","m","dialogsItems","values","newMessageBody","compose","actions"],"mappings":"sLASIA,EAAkB,SAACC,GACnB,MAAO,CACHC,OAAQD,EAAME,KAAKD,SAIpB,SAASE,EAAiBC,GAS7B,OAAOC,YAAQN,EAARM,EAPP,SAA2BC,GACUA,EAAxBL,OADyC,IAC9BM,EAD6B,YAChBD,EADgB,YAE7C,OAAKA,EAAML,OACJ,kBAACG,EAAcG,GADI,kBAAC,IAAD,CAAUC,GAAI,gB,oBClBpDC,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,4B,oBCA9ID,EAAOC,QAAU,CAAC,OAAS,6B,oBCA3BD,EAAOC,QAAU,CAAC,SAAW,4B,iHCmBdC,EAXK,SAACL,GAEjB,IAAIM,EAAO,YAAcN,EAAMO,GAE/B,OACI,yBAAKC,UAAS,UAAKC,IAAQC,OAAb,YAAuBD,IAAQE,SACzC,kBAAC,IAAD,CAAST,GAAII,GAAON,EAAMY,Q,kBCFvBC,EAN4B,SAACb,GACxC,OACI,yBAAKQ,UAAWC,IAAQK,UAAWd,EAAMe,U,yBCD3CC,EAAeC,YAAiB,IAcvBC,cAA+B,CAACC,KAAM,yBAAtCD,EAZ0D,SAAClB,GACtE,OAAO,0BAAMoB,SAAUpB,EAAMqB,cACzB,6BACKC,YAAuC,qBACpC,iBACA,CAACC,IAAeP,GAChBQ,MAER,6BAAK,oDCgBEC,EAvB6B,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,WACnDC,EAAkBF,EAAYG,QAAQC,KAAK,SAACC,GAAD,OAAkB,kBAAC,EAAD,CAC7DC,IAAKD,EAAExB,GAAIA,GAAIwB,EAAExB,GAAIK,KAAMmB,EAAEnB,UAC7BqB,EAAmBP,EAAYZ,SAASgB,KAAI,SAACI,GAAD,OAAmB,kBAAC,EAAD,CAC/DF,IAAKE,EAAE3B,GAAIQ,QAASmB,EAAEnB,aAM1B,OACI,yBAAKP,UAAWC,IAAQoB,SACpB,yBAAKrB,UAAWC,IAAQ0B,cACnBP,GAEL,yBAAKpB,UAAWC,IAAQK,UACnBmB,EACD,kBAAC,EAAD,CAAgBb,SAXR,SAACgB,GACjBT,EAAWS,EAAOC,sB,wBCIXC,sBACXvC,aAPkB,SAACL,GACnB,MAAO,CACHgC,YAAahC,EAAMgC,eAKE,CACrBC,WAAYY,IAAQZ,aAEtB9B,IAJSyC,CAKbb","file":"static/js/4.0654cb4e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {AppStateType} from \"../redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\n\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\n\r\nexport function withAuthRedirect(Component: React.ComponentType) {\r\n\r\n    function RedirectComponent(props: MapStatePropsType) {\r\n            let {isAuth, ...restProps} = props\r\n            if (!props.isAuth) return <Redirect to={'/login'}/>\r\n            return <Component {...restProps }/>\r\n\r\n    }\r\n\r\n    return connect(mapStateToProps)(RedirectComponent)\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2sG--\",\"dialogsItems\":\"Dialogs_dialogsItems__31zXk\",\"active\":\"Dialogs_active__1z_Ga\",\"messages\":\"Dialogs_messages__31Eno\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__3lXd5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Message_messages__3LXnT\"};","import React from \"react\";\r\nimport classes from \"./DialogItem.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype PropsTypeDialogItem = {\r\n    id: string\r\n    name: string\r\n}\r\n\r\nconst  DialogItem = (props:PropsTypeDialogItem) => {\r\n\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return (\r\n        <div className={`${classes.dialog} ${classes.active}`}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport classes from \"./Message.module.css\";\r\n\r\ntype PropsTypeMessage = {\r\n    message: string\r\n}\r\n\r\nconst Message:React.FC<PropsTypeMessage> = (props) => {\r\n    return (\r\n        <div className={classes.messages}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message;","import {maxLengthCreator, requiredField} from \"../../utils/validators/validators\";\r\nimport React from \"react\";\r\nimport {InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {createField, Textarea} from \"../common/formsControls/FormsControls\";\r\nimport { DialogsFormDataType } from \"../../types/types\";\r\n\r\ntype DialogsFormValuesTypeKeys = Extract<keyof DialogsFormDataType, string>\r\n\r\nconst maxLength50 = (maxLengthCreator(50))\r\n\r\nconst AddMessageForm: React.FC<InjectedFormProps<DialogsFormDataType>> = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            {createField<DialogsFormValuesTypeKeys>(\"Enter your message\",\r\n                \"newMessageBody\",\r\n                [requiredField, maxLength50],\r\n                Textarea)}\r\n        </div>\r\n        <div><button>Add message</button></div>\r\n    </form>\r\n}\r\n\r\nexport default reduxForm<DialogsFormDataType>({form: \"dialogsAddMessageForm\"})(AddMessageForm)\r\n","import React from \"react\";\r\nimport classes from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {MapDispatchPropsType, MapStatePropsType} from \"./DialogsContainer\";\r\nimport {DialogType, MessageType} from \"../../redux/dialogs-reducer\";\r\nimport AddMessageForm from \"./AddMessageForm\";\r\nimport {DialogsFormDataType} from \"../../types/types\";\r\n\r\ntype DialogsPropsType = MapDispatchPropsType & MapStatePropsType\r\n\r\nconst Dialogs: React.FC<DialogsPropsType> = ({dialogsPage, addMessage}) => {\r\n    let dialogsElements = dialogsPage.dialogs.map( (d:DialogType) => <DialogItem\r\n        key={d.id} id={d.id} name={d.name}/>)\r\n    let messagesElements = dialogsPage.messages.map((m:MessageType) => <Message\r\n        key={m.id} message={m.message}/>)\r\n\r\n    let addNewMessage = (values: DialogsFormDataType) => {\r\n        addMessage(values.newMessageBody)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <div className={classes.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={classes.messages}>\r\n                {messagesElements}\r\n                <AddMessageForm onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs","import {actions, DialogsStateType} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {compose} from \"redux\";\r\nimport React from \"react\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\nexport type MapStatePropsType = {\r\n    dialogsPage: DialogsStateType\r\n}\r\n\r\nexport type MapDispatchPropsType = {\r\n    addMessage: (newMessageBody: string) => void\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {\r\n        addMessage: actions.addMessage\r\n    })\r\n    , withAuthRedirect\r\n)(Dialogs)"],"sourceRoot":""}